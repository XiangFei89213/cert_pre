    // string belong to library
    // char[], malloc

char* longestCommonPrefix(char** strs, int strsSize) {

    // get the length of strs[0] so define the size of return value
    int len = strlen(strs[0]);
    char *prefix = (char*)malloc(sizeof(char) * (len + 1));
    
    // double loop to compare
    for (int j = 0; j < len; j++) {
        char c = strs[0][j];  // 從第一個字串取第 j 個字元
        for (int i = 1; i < strsSize; i++) {
            if (strs[i][j] != c || strs[i][j] == '\0') {
                prefix[j] = '\0'; // 加上字串結尾
                return prefix;
            }
        }
        prefix[j] = c; // 如果所有字串在第 j 位都相同
    }
    prefix[len] = '\0'; // 全部走完 → 第一個字串就是最長前綴
    return prefix;
    


    return prefix;
}

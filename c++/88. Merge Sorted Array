// solution 1
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        
        int i = n-1; // nums2's index
        int j = m-1; // nums1's index

        int index = m+n -1;

        while(i >=0 && j >=0 ){
            if(nums2[i] > nums1[j]){
                nums1[index] = nums2[i];
                i--;
                index--;
            } else if(nums2[i] <= nums1[j]){
                nums1[index] = nums1[j];
                index--;
                j--;
            }
        }
        while(i >= 0){
            nums1[index] = nums2[i];
            index--;
            i--;
        }

    }
};

// solution 2 
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i = m - 1;          // 注意：i 指 nums1 的最後有效
        int j = n - 1;          // j 指 nums2 的最後
        int k = m + n - 1;      // 寫入位置

        // 目標：把 nums2 的東西全放進 nums1
        while (j >= 0) {

            // when nums2 跟nums1 都還有東西
            if (i >= 0 && nums1[i] > nums2[j]) {
                nums1[k--] = nums1[i--];

                // 只剩nums2 還有東西
            } else {
                nums1[k--] = nums2[j--];
            }                               
        }
    }
};


